{"version":3,"sources":["ui/helpers/constantes/index.tsx","ui/helpers/animations/index.ts","ui/components/templates/styles.ts","ui/components/atoms/Title/styles.ts","ui/components/atoms/Title/index.tsx","ui/components/atoms/GoToGitHub/styles.ts","ui/helpers/styles/themes.ts","ui/helpers/hooks/usePersistedTheme.ts","ui/helpers/hooks/theme.tsx","ui/components/atoms/GoToGitHub/index.tsx","ui/components/molecules/Board/styles.ts","ui/components/molecules/Board/index.tsx","ui/components/organisms/GameDialog/styles.ts","ui/components/organisms/GameDialog/index.tsx","ui/components/atoms/SelectTheme/styles.ts","ui/components/atoms/SelectTheme/index.tsx","ui/components/templates/Hash.tsx","ui/helpers/styles/global.ts","index.tsx"],"names":["boardDefault","onlyGameCharacters","gameCharacters","ImageGlobal","GoToGitHub","process","VsComputer","MultiPlayers","GoHome","animationStartGame","keyframes","animationDraw","animationWinnerCoin","animationWinnerTrophy","animationTurnPlayer","animationRound","GameContianer","styled","section","props","theme","colors","border","primary","background","secondary","boxShadow","PLayerTurn","h2","text","PlayerTurnAnimation","div","RoundAnimation","SpanTurn","span","colorPlayrTurn","ContainerPointsRound","aside","Points","p","Round","ValuePointsX","ValuePointsO","ValueRound","TitleStyle","h1","Title","nameGame","RotateIconGit","GoToGitHubStyle","button","colorDescription","colorTheme","LinkToGitHub","a","ImgGit","img","TextGitHub","lightTheme","name","octocat","ternary","darkTheme","usePersistedTheme","key","themeDefault","useState","currentTheme","localStorage","getItem","JSON","parse","setTheme","useEffect","setItem","stringify","ThemeContext","createContext","useTheme","useContext","SelectThemeProvider","children","Provider","value","toggleTheme","ThemeProvider","href","target","rel","src","alt","BoardStyle","ul","PlayerArea","li","css","hover","Board","boardCurrent","onClick","map","player","index","Background","open","BtnVisibleHidden","ContainerGameDialog","dialog","visible","TitleModal","DescriptionModal","MessageWinner","DrawPlayerAnimation","WinnerCoinAnimation","WinnerTrophyAnimation","DescriptionEndGame","winner","ContainerBtns","IconButton","GapIcons","BtnStart","disabledOn","BtnVsComputer","adversary","BtnMultiPlayers","BtnReplay","BtnGoHome","GameDialog","game","startGame","replay","goHome","selectComputer","selectMultiPlayers","viewBoard","setViewBoard","statusGame","type","className","disabled","SelectThemeStyle","Sun","HalfMoon","BarNightMode","SelectTheme","Hash","board","setInitialBoard","turningBoardIntoArray","Array","fill","split","setBoardCurrent","pointsX","round","pointsO","setGame","historyNavigate","useNavigate","clearHistoryNavigate","pathname","window","location","search","queryUrlParameter","useLocation","useMemo","URLSearchParams","LocationSearch","urlParameter","get","howManyCharactersX","match","length","howManyCharactersO","alert","test","toUpperCase","computerMovementAndEndOfTheGame","useCallback","every","playerArea","validDraw","endOfTheGame","forEach","playerAreas","emptySeatsOnBoard","emptyArea","indexOf","push","computerRandomPosition","Math","floor","random","newBoard","slice","encodeURIComponent","join","area","React","memo","createGlobalStyle","App","initialBoard","path","element","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e5fbd6c9.chunk.js","sourcesContent":["\nexport const boardDefault = \"         \";\n\nexport const onlyGameCharacters = /[^o x]/ig;\n\nexport const gameCharacters = {\n    X: /x/ig,\n    O: /o/ig\n};\n\nexport const endOfTheGame = (board: Array<string | []>) => {\n    const endGame = [\n        [board[0], board[1], board[2]],\n        [board[0], board[3], board[6]],\n        [board[0], board[4], board[8]],\n        [board[1], board[4], board[7]],\n        [board[2], board[5], board[8]],\n        [board[2], board[4], board[6]],\n        [board[3], board[4], board[5]],\n        [board[6], board[7], board[8]],\n    ];\n    return endGame\n};\n\nexport const ImageGlobal = {\n    GoToGitHub: `${process.env.PUBLIC_URL}/img/png/go-to-GitHub.png`,\n    VsComputer: `${process.env.PUBLIC_URL}/img/png/vsComputer.png`,\n    MultiPlayers: `${process.env.PUBLIC_URL}/img/png/multiPlayers.png`,\n    GoHome: `${process.env.PUBLIC_URL}/img/png/goHome.png`,\n};\n","import { keyframes } from \"styled-components\";\n\nexport const animationStartGame = keyframes`\n  0% {  transform: scale(1.2) rotate(-7deg);}\n  40% {  transform: rotate(7deg) ;}\n  100% {  transform: rotate(-7deg);} \n`;\n\nexport const animationDraw = keyframes`\n  40% {  transform: translateX(-35px) scale(1.1);}\n  100% {  transform: scaleX(-1) rotate(0);} \n`;\n\nexport const animationWinnerCoin = keyframes`\n  0% { transform: scaleX(-1) rotate(0); }\n  40% {  transform: translateX(0) scale(0.9);  }\n  100% {  transform: scaleX(-1); } \n`;\n\nexport const animationWinnerTrophy = keyframes`\n  0% { transform: scale(1.1);}\n  40% {  transform:  scale(0.8);}\n  100% { transform: scale(1.1);}\n`;\n\nexport const animationTurnPlayer = keyframes`\n  0% {  transform: scale(0.9);}\n  40% {  transform: scale(1.2);}\n  100% {  transform:  scale(0.8);} \n`;\n\nexport const animationRound = keyframes`\n  0% {  transform: scaleX(-1) scale(1.1);}\n  40% {  transform: scale(0.7) ;}\n  100% {  transform:  scale(1.4);} \n`;\n","import styled from \"styled-components\";\nimport { HashTypesStyle } from \"../../helpers/interfaces\";\nimport { animationTurnPlayer, animationRound } from \"../../helpers/animations\";\n\nexport const GameContianer = styled.section`\n  height: auto;\n  border-radius: 5px;\n  font-weight: bold;\n  border: 1px solid ${(props) => props.theme.colors.border.primary};\n  background-color: ${(props) => props.theme.colors.background.secondary};\n  padding: 15px;\n  max-width: 340px;\n  box-shadow: 3px 4px 14px 5px  ${(props) => props.theme.colors.boxShadow.primary};\n\n  @media (max-width: 400px) {\n    width: 95%;\n    margin: auto;\n  }\n`;\n\nexport const PLayerTurn = styled.h2`\n  font-size: 15px;\n  color: ${(props) => props.theme.colors.text.secondary};\n  text-align: left;\n  padding: 13px;\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const PlayerTurnAnimation = styled.div`\n  animation-name: ${animationTurnPlayer};\n  animation-duration: 1.5s;\n  animation-iteration-count: infinite;\n`;\n\nexport const RoundAnimation = styled.div`\n  animation-name: ${animationRound};\n  animation-duration: 2.2s;\n  animation-iteration-count: 1;\n  animation-delay: 0.2s;\n  transform: scale(1.4);\n`;\n\nexport const SpanTurn = styled.span<HashTypesStyle>`\n  font-size: 22px;\n  color: ${(props) => (props.colorPlayrTurn === \"X\" ? \"red\" : \"blue\")};\n`;\n\nexport const ContainerPointsRound = styled.aside`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n  align-items: flex-end;\n`;\n\nexport const Points = styled.p`\n  font-size: 13px;\n  color: ${(props) => props.theme.colors.text.primary};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 0;\n  letter-spacing: -2px;\n`;\n\nexport const Round = styled(Points)`\n  font-size: 16px;\n  color: ${(props) => props.theme.colors.text.secondary};\n  display: flex;\n  gap: 10px;\n`;\n\nexport const ValuePointsX = styled.span`\n  font-size: 16px;\n  padding: 5px;\n  color: red;\n`;\n\nexport const ValuePointsO = styled(ValuePointsX)`\n  color: blue;\n`;\n\nexport const ValueRound = styled(ValuePointsX)`\n  font-size: 18px;\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n","import styled from \"styled-components\";\n\nexport const TitleStyle = styled.h1`\n  text-align: center;\n  font-size: 25px;\n  color: ${(props) => props.theme.colors.text.primary};\n  padding: 20px;\n\n  @media (max-width: 400px) {\n  padding: 1rem 0.5rem;\n  }\n`;\n","import React from 'react';\nimport * as S from './styles';\nimport { TypesTitle } from '../../../helpers/interfaces'\n\n\nconst Title: React.FC<TypesTitle> = ({ nameGame }) => (\n    <S.TitleStyle>\n        {nameGame}\n    </S.TitleStyle>\n);\n\nexport default Title;\n","import styled, { keyframes } from \"styled-components\";\n\nconst RotateIconGit = keyframes`\n 0% { transform: rotate(40deg) }\n 10% {  transform: rotate(347deg) }\n 20% {   transform: rotate(17deg) }\n 30% {   transform: rotate(-60deg)) }\n 40% {  transform: rotate(40deg)  }\n 60% {   transform: rotate(-70deg) }\n 80% {   transform: rotate(50deg) }\n 100% {  transform: rotate(-60deg) } \n`;\n\ninterface GoToGitHubStyleTypes {\n  colorDescription: string | null;\n  colorTheme: string | null;\n}\n\nexport const GoToGitHubStyle = styled.button<GoToGitHubStyleTypes>`\n  background: #929eaa;\n  border-radius: 50%;\n  height: 65px;\n  width: 65px;\n  position: absolute;\n  bottom: 50px;\n  right: 15px;\n  cursor: pointer;\n  font-style: normal;\n  font-weight: bold;\n  color: ${(props) => !props.colorDescription && props.colorTheme === \"light\" ? \"#555\" : \"rgb(248, 248, 255, 0.7)\" };\n  border-color: ${(props) => !props.colorDescription ? \"#555\" : \"rgb(248, 248, 255, 0.7)\"};\n  font-size: 11px;\n  z-index: 101;\n  \n\n  :hover {\n    background-color: #b1b6bb;\n  }\n  :active {\n    opacity: 0.7;\n  }\n`;\n\nexport const LinkToGitHub = styled.a`\n  text-decoration: none;\n \n`;\n\nexport const ImgGit = styled.img`\n  height: 50px;\n  width: 50px;\n  transform: rotate(-20deg);\n  animation-name: ${RotateIconGit};\n  animation-duration: 2.5s;\n  animation-iteration-count: infinite;\n  margin-top: 3px;\n  :hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const TextGitHub = styled.p`\n  width: 60px;\n  text-align: center;\n  position: relative;\n  /* right: 10px; */\n  font-weight: bold;\n  top: 12px;\n\n  line-height: 15px;\n`;\n","export const lightTheme = {\n  name: \"light\",\n  colors: {\n    octocat: \"#00000095\",\n    background: {\n      primary: \"#f8f8ff\",\n      secondary: \"#fffcff\",\n      ternary: \"#00000085\",\n    },\n    text: {\n      primary: \"#00000060\",\n      secondary: \"#00000080\",\n    },\n    boxShadow: {\n      primary: \"#00000065\",\n    },\n     border: {\n      primary: \"#00000060\"\n    }\n  },\n};\n\nexport const darkTheme = {\n  name: \"dark\",\n  colors: {\n    octocat: \"#ffffff99\",\n    background: {\n      primary: \"#50514F\",\n      secondary: \"#777877\",\n      ternary: \"#f8f8ff25\",\n    },\n    text: {\n      primary: \"#f8f8ff75\",\n      secondary: \"#f8f8ff99\",\n    },\n    boxShadow: {\n      primary: \"#f8f8ff50\",\n    },\n    border: {\n      primary: \"#f8f8ff99\"\n    }\n  },\n};\n","import { useState, useEffect, Dispatch, SetStateAction } from \"react\";\n\ntype Response<Type> = [Type, Dispatch<SetStateAction<Type>>];\n\nfunction usePersistedTheme<Type>(\n  key: string,\n  themeDefault: Type\n): Response<Type> {\n  const [theme, setTheme] = useState(() => {\n    const currentTheme = localStorage.getItem(key);\n\n    return currentTheme ? JSON.parse(currentTheme) : themeDefault;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(theme));\n  }, [key, theme]);\n\n  return [theme, setTheme];\n}\n\nexport default usePersistedTheme;\n","import React, { createContext, useContext } from 'react';\nimport { ThemeProvider, DefaultTheme } from 'styled-components';\nimport { lightTheme, darkTheme } from '../styles/themes';\nimport usePersistedTheme from './usePersistedTheme';\n\ninterface Theme {\n  name: string;\n  colors: {\n    octocat: string,\n    background: {\n      primary: string,\n      secondary: string,\n      ternary: string,\n    },\n    text: {\n      primary: string,\n      secondary: string,\n    },\n    boxShadow: {\n      primary: string,\n    },\n    border: {\n      primary: string,\n    }\n}\n}\n\ninterface ThemeContextData {\n  toggleTheme(): void;\n  theme: Theme;\n}\n\nconst ThemeContext = createContext<ThemeContextData>({} as ThemeContextData);\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const SelectThemeProvider: React.FC = ({ children }) => {\n\n  const [theme, setTheme] = usePersistedTheme<DefaultTheme>('theme', lightTheme);\n\n  const toggleTheme = () => {\n    setTheme(theme.name === 'light' ? darkTheme : lightTheme);\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={{ toggleTheme, theme }}\n    >\n      <ThemeProvider theme={theme}>\n        {children}\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport default ThemeProvider;\n\n\n","import React from \"react\";\nimport * as S from \"./styles\";\nimport { ImageGlobal } from '../../../helpers/constantes/index';\nimport { useTheme } from '../../../helpers/hooks/theme';\n\ninterface GoToGitHubProps {\n  colorDescription: null | string;\n}\n\nconst GoToGitHub: React.FC<GoToGitHubProps> = ({ colorDescription }) => {\n  const { theme } = useTheme();\n\n  return (\n    <S.LinkToGitHub href=\"https://github.com/J0se-Luiz/react-hash\" target=\"_blank\" rel=\"noopener\">\n      <S.GoToGitHubStyle colorDescription={colorDescription} colorTheme={theme.name}>\n        <S.ImgGit\n          src={ImageGlobal.GoToGitHub}\n          alt=\"Go to GitHub\"\n        />\n        <S.TextGitHub>Go to GitHub</S.TextGitHub>\n      </S.GoToGitHubStyle>\n    </S.LinkToGitHub>\n  );\n};\n\nexport default GoToGitHub;","import styled, { css } from \"styled-components\";\nimport { typesPlayerAresStyle } from \"../../../helpers/interfaces\";\n\nexport const BoardStyle = styled.ul`\n  display: grid;\n  justify-content: center;\n  grid-template-columns: repeat(3, 100px);\n  grid-template-rows: repeat(3, 100px);\n`;\n\nexport const PlayerArea = styled.li<typesPlayerAresStyle>`\n  background-color: ${(props) => props.theme.colors.background.secondary};\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  font-size: 3rem;\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.text.primary};\n  border: 3px solid;\n\n  ${(props) => {\n    if (props.border === 0)\n      return css`\n        border-top: none;\n        border-left: none;\n      `;\n    if (props.border === 1)\n      return css`\n        border-top: none;\n      `;\n    if (props.border === 2)\n      return css`\n        border-top: none;\n        border-right: none;\n      `;\n    if (props.border === 3)\n      return css`\n        border-left: none;\n      `;\n    if (props.border === 5)\n      return css`\n        border-right: none;\n      `;\n    if (props.border === 6)\n      return css`\n        border-left: none;\n        border-bottom: none;\n      `;\n    if (props.border === 7)\n      return css`\n        border-bottom: none;\n      `;\n    if (props.border === 8)\n      return css`\n        border-right: none;\n        border-bottom: none;\n      `;\n  }};\n\n  ${(props) => {\n    if (props.hover === \" \")\n      return css`\n        :hover {\n          border: 4px solid;\n          box-shadow: 2px 5px 23px 7px ${(props) => props.theme.colors.boxShadow.primary};\n          transition: all 0.2s ease-in-out;\n          transform: scale(1.1);\n          background-color: ${(props) => props.theme.colors.background.primary};\n        }\n      `;\n  }};\n\n  ${(props) => {\n    if (props.hover !== \" \")\n      return css`\n        :hover {\n          cursor: not-allowed;\n        }\n      `;\n  }};\n`;\n","import React from 'react';\nimport * as S from './styles';\nimport { TypesBoard } from '../../../helpers/interfaces'\n\nconst Board: React.FC<TypesBoard> = ({ boardCurrent, onClick }) => (\n  <S.BoardStyle>\n    {boardCurrent?.map((player: string, index: number) => (\n      <S.PlayerArea\n        key={index}\n        border={index}\n        hover={player}\n        onClick={() => onClick(index)}\n      >\n        {player}\n      </S.PlayerArea>\n    ))}\n  </S.BoardStyle>\n);\n\nexport default Board;\n","import styled, { css } from \"styled-components\";\nimport {\n  OpenDialogTypeStyle,\n  PlayerWinnerStyle,\n  VisibleHiddenBoard,\n  BtnStartTypesStyle,\n} from \"../../../helpers/interfaces\";\nimport {\n  animationStartGame,\n  animationDraw,\n  animationWinnerCoin,\n  animationWinnerTrophy,\n} from \"../../../helpers/animations\";\n\nexport const Background = styled.div<OpenDialogTypeStyle>`\n  display: ${(props) => (props.open ? \"flex\" : \"none\")};\n\n  ::before {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    content: \" \";\n    position: fixed;\n    background: ${(props) => props.theme.colors.background.ternary};\n\n    z-index: 100;\n  }\n`;\n\nexport const BtnVisibleHidden = styled.button`\n  z-index: 101;\n  position: fixed;\n  top: calc(50vh - 240px);\n  /* position: relative;\n  top: -425px; */\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.text.secondary};\n  box-shadow: 4px 8px 9px 0px ${(props) => props.theme.colors.boxShadow.primary};\n  border: solid 2.5px ${(props) => props.theme.colors.border.primary};\n  font-size: 13px;\n  padding: 5px;\n  background-color: ${(props) => props.theme.colors.background.secondary};\n\n  &:hover {\n    border: \"1px solid ${(props) => props.theme.colors.border.primary}\";\n    transform: scale(1.3) rotate(-10deg);\n  }\n\n  &:focus {\n    outline-style: none;\n  }\n`;\n\nexport const ContainerGameDialog = styled.dialog<VisibleHiddenBoard>`\n  visibility: ${(props) =>\n    props.visible === \"visible\" ? \"visible\" : \"hidden\"};\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: space-around;\n  align-items: center;\n  text-align: center;\n  position: fixed;\n  top: 50%;\n  transform: translateY(-50%);\n  z-index: 100;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.colors.background.secondary};\n  padding: 20px 10px 0px 10px;\n  box-shadow: 3px 4px 14px 5px ${(props) => props.theme.colors.boxShadow.primary};\n  width: 360px;\n  min-height: 440px;\n  border: 3px solid ${(props) => props.theme.colors.border.primary};\n\n  @media (max-width: 500px) {\n    width: 93.5%;\n    min-width: auto;\n  }\n`;\n\nexport const TitleModal = styled.h2`\n  margin: 5px;\n  font-size: 25px;\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.text.secondary};\n\n  .nes-octocat {\n    /* opacity: 0.9; */\n    :before{\n      color: ${(props) => props.theme.colors.octocat} !important;\n    }\n  }\n`;\n\nexport const DescriptionModal = styled(TitleModal)`\n  font-size: 15px;\n  color: ${(props) => props.theme.colors.text.primary};\n  padding: 0 15px 10px 15px;\n`;\n\nexport const MessageWinner = styled(TitleModal)`\n  opacity: 0.7;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  flex-direction: column;\n  max-width: 70%;\n`;\n\nexport const DrawPlayerAnimation = styled.div`\n  animation-name: ${animationDraw};\n  animation-duration: 2.5s;\n  animation-iteration-count: infinite;\n  transform: scaleX(-1);\n  transform: rotate(0);\n`;\n\nexport const WinnerCoinAnimation = styled.div`\n  animation-name: ${animationWinnerCoin};\n  animation-duration: 1.5s;\n  animation-iteration-count: infinite;\n  transform: scaleX(1);\n  transform: rotate(0);\n`;\n\nexport const WinnerTrophyAnimation = styled.div`\n  animation-name: ${animationWinnerTrophy};\n  animation-duration: 1.5s;\n  animation-iteration-count: infinite;\n  transform: scaleX(1);\n  transform: rotate(0);\n`;\n\nexport const DescriptionEndGame = styled.p<PlayerWinnerStyle>`\n  color: ${(props) => (props.winner === \"X\" ? \"red\" : \"blue\")};\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  margin-top: 20px;\n  font-size: 35px;\n`;\n\nexport const ContainerBtns = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-evenly;\n  margin-bottom: 25px;\n`;\n\nexport const IconButton = styled.img`\n  margin: 2px auto;\n  width: auto;\n  height: auto;\n`;\n\nexport const GapIcons = styled.div`\n  gap: 6px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const BtnStart = styled.button<BtnStartTypesStyle>`\n  height: auto;\n  width: auto;\n  display: flex;\n  flex-direction: column;\n  padding: 3px;\n  min-width: 102px;\n  align-items: center;\n  font-size: 12px;\n  justify-content: space-around;\n  gap: 5px;\n  background-color: transparent;\n  min-width: 112px;\n  box-shadow: 4px 8px 9px 0px ${(props) => props.theme.colors.boxShadow.primary};\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.text.primary};\n  border: 2px solid ${(props) => props.theme.colors.border.primary};\n\n  @media (max-width: 1024px) {\n    font-size: 0.8rem;\n    padding: 4px 8px;\n  }\n\n  &:active {\n    opacity: 0.2;\n    cursor: wait;\n  }\n\n  &:hover {\n    border: \"1px solid ${(props) => props.theme.colors.border.primary}\";\n    transform: scale(1.2);\n  }\n\n  &:disabled {\n    opacity: 0.4;\n    cursor: not-allowed;\n    border: \"1px solid ${(props) => props.theme.colors.border.primary}\";\n    transform: scale(1.2);\n  }\n\n  :focus {\n    outline-style: none;\n  }\n\n  ${(props) => {\n    if (!props.disabledOn)\n      return css`\n        animation-name: ${animationStartGame};\n        animation-duration: 1.5s;\n        animation-iteration-count: infinite;\n      `;\n  }}\n`;\n\nexport const BtnVsComputer = styled(BtnStart)<PlayerWinnerStyle>`\n  border: ${(props) =>\n    props.adversary === \"computer\" ? `1px solid ${(props: any) => props.theme.colors.border.primary}` : \" \"};\n  transform: scale(${(props) => (props.adversary === \"computer\" ? 1.2 : 1)});\n  opacity: ${(props) => (props.adversary === \"computer\" ? 0.3 : \" \")};\n  transition: all 0.2s ease-in-out;\n  font-size: 8px;\n\n  animation-name: none;\n`;\n\nexport const BtnMultiPlayers = styled(BtnStart)<PlayerWinnerStyle>`\n  border: ${(props) =>\n    props.adversary === \"multiPlayers\" ? `1px solid ${(props: any) => props.theme.colors.border.primary}` : \" \"};\n  transform: scale(\n    ${(props) => (props.adversary === \"multiPlayers\" ? 1.2 : 1)}\n  );\n  opacity: ${(props) => (props.adversary === \"multiPlayers\" ? 0.3 : \" \")};\n  transition: all 0.2s ease-in-out;\n  font-size: 8px;\n\n  animation-name: none;\n`;\n\nexport const BtnReplay = styled(BtnStart)`\n  animation-name: none;\n  padding: 8px;\n`;\n\nexport const BtnGoHome = styled(BtnStart)`\n  animation-name: none;\n`;\n","import React, { useState } from \"react\";\nimport * as S from \"./styles\";\nimport { typesGameDialog } from '../../../helpers/interfaces';\nimport { ImageGlobal } from \"../../../helpers/constantes\";\n\nconst GameDialog: React.FC<typesGameDialog> = ({ game, startGame, replay, goHome, selectComputer, selectMultiPlayers }) => {\n  const [viewBoard, setViewBoard] = useState(\"visible\")\n\n  return (\n    <S.Background open={game?.winner || game?.statusGame} >\n\n      {viewBoard === \"visible\" && game?.statusGame === \"GameOver\" && <S.BtnVisibleHidden onClick={() => setViewBoard(\"hidden\")} aria-label=\"Button View Board\" type=\"button\">View Board </S.BtnVisibleHidden>}\n\n      {viewBoard === \"hidden\" && game?.statusGame === \"GameOver\" && <S.BtnVisibleHidden onClick={() => setViewBoard(\"visible\")} aria-label=\"Button  Winner Screen\">{game?.winner === \"draw\" || !game.winner ? \"Draw\" : \"Winner\"} Screen</S.BtnVisibleHidden>}\n\n      <S.ContainerGameDialog visible={viewBoard}>\n        {game?.statusGame === \"Home\" && (\n          <>\n            <S.TitleModal>Hello!<i className=\"nes-octocat animate\"></i> let's play?</S.TitleModal>\n            <S.DescriptionModal> choose game mode and press start </S.DescriptionModal>\n\n            <S.ContainerBtns>\n              <S.BtnVsComputer /* className=\"nes-btn\" */ aria-label=\"Button selectComputer\" type=\"button\" onClick={selectComputer} adversary={game.adversary}>\n                <S.IconButton src={ImageGlobal.VsComputer} alt=\"IconselectComputer\" />\n                VS COMPUTER\n              </S.BtnVsComputer>\n              <S.BtnMultiPlayers /* className=\"nes-btn\" */ aria-label=\"Button selectMultiPlayers\" type=\"button\" onClick={selectMultiPlayers} adversary={game.adversary}>\n                <S.IconButton src={ImageGlobal.MultiPlayers} alt=\"IconselectComputer\" />\n                2 PLAYERS\n              </S.BtnMultiPlayers>\n            </S.ContainerBtns>\n\n            <S.ContainerBtns>\n              <S.BtnStart disabledOn={!game?.adversary} /* className=\"nes-btn\" */ aria-label=\"Button StartGame\" disabled={!game.adversary} type=\"button\" onClick={startGame}>\n                <i className=\"snes-jp-logo\"></i>\n                START\n              </S.BtnStart>\n            </S.ContainerBtns>\n          </>)}\n\n\n        {game?.statusGame === \"GameOver\" && (\n          <>\n            <S.TitleModal>End of Game</S.TitleModal>\n            {game?.winner === \"draw\" || game?.winner === null ? (\n              <S.MessageWinner >\n                <S.GapIcons>\n                  <S.DrawPlayerAnimation>\n                    <i className=\"nes-mario\"></i>\n                  </S.DrawPlayerAnimation>\n                  Draw!\n                </S.GapIcons>\n                match was draw!\n              </S.MessageWinner>\n            ) : (\n              <S.MessageWinner >\n                <S.DescriptionEndGame winner={game?.winner}>\n                  <S.WinnerTrophyAnimation>\n                    <i className=\"nes-icon trophy is-large\"></i>\n                  </S.WinnerTrophyAnimation>\n                  {game?.winner}\n                  <S.WinnerCoinAnimation>\n                    <i className=\"nes-icon coin is-large\"></i>\n                  </S.WinnerCoinAnimation>\n                </S.DescriptionEndGame>\n                is the winner!\n              </S.MessageWinner>\n            )}\n            <S.ContainerBtns >\n\n              <S.BtnReplay /* className=\"nes-btn\" */ aria-label=\"Button Replay\" type=\"button\" onClick={replay}>\n                <i className=\"snes-jp-logo\"></i>\n                PLAY AGAIN\n              </S.BtnReplay>\n\n              <S.BtnGoHome /* className=\"nes-btn\" */ aria-label=\"Button GoHome\" type=\"button\" onClick={goHome} >\n                <S.IconButton src={ImageGlobal.GoHome} alt=\"Icon GO HOME\" />\n                GO HOME\n              </S.BtnGoHome>\n            </S.ContainerBtns>\n          </>)}\n\n      </S.ContainerGameDialog>\n    </S.Background>\n  );\n};\n\nexport default GameDialog;","import styled from \"styled-components\";\n\ninterface TypeSelectThemeStyle {\n  statusGame: string | null;\n}\n\nexport const SelectThemeStyle = styled.button<TypeSelectThemeStyle>`\n  position: fixed;\n  top: 40px;\n  left: 20px;\n  z-index: 105;\n  height: 37px;\n  width: 80px;\n  border-radius: 18px;\n  padding: 5px;\n  background-color: ${(props) => props.theme.colors.background.secondary};\n  border: 2px solid ${(props) => props.theme.colors.border.primary};\n\n  /* :focus {\n    outline: thin dotted;\n    outline: 0px auto -webkit-focus-ring-color;\n    outline-offset: 0px;\n  } */\n\n  :focus {\n    outline-style: none;\n  }\n \n  @media (max-width: 400px) {\n    position: ${(props) => !props.statusGame ? \"relative\" : \"absolute\"};\n    top: ${(props) => !props.statusGame ? \"2px\" : \"15px\"};\n    left: 20px;\n  }\n`;\n\nexport const Sun = styled.div`\n  height: 23px;\n  width: 25px;\n  border-radius: 20px;\n  background: #f0eb4a;\n`;\n\nexport const HalfMoon = styled(Sun)`\n  float: right;\n`;\nexport const BarNightMode = styled(Sun)`\n  float: left;\n  width: 55px;\n  position: absolute;\n  background-color: ${(props) => props.theme.colors.background.secondary};\n`;","import React from 'react';\nimport { useTheme } from '../../../helpers/hooks/theme';\n\nimport * as S from './styles';\n\ninterface TypesSelectTheme {\n  statusGame: string | null;\n}\n\nconst SelectTheme: React.FC<TypesSelectTheme> = ({ statusGame }) => {\n  const { toggleTheme, theme } = useTheme();\n\n  return (\n\n    <S.SelectThemeStyle statusGame={statusGame} type=\"button\" onClick={toggleTheme}>\n      {theme.name === \"light\" ?\n        <S.Sun />\n        :\n        <>\n          <S.BarNightMode />\n          <S.HalfMoon />\n        </>}\n\n    </S.SelectThemeStyle>\n\n  );\n};\n\nexport default SelectTheme;","\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport * as S from './styles'\nimport { endOfTheGame, boardDefault, onlyGameCharacters, gameCharacters } from '../../helpers/constantes';\nimport { TypesGame, TypesHash } from '../../helpers/interfaces';\nimport Title from \"../atoms/Title\";\nimport GoToGitHub from '../atoms/GoToGitHub';\nimport Board from '../molecules/Board';\nimport GameDialog from '../organisms/GameDialog';\nimport SelectTheme from '../atoms/SelectTheme'\n\nconst Hash: React.FC<TypesHash> = ({ board, setInitialBoard }) => {\n\n  const turningBoardIntoArray = Array(1).fill(board.split(\"\"));\n  const [boardCurrent, setBoardCurrent] = useState(turningBoardIntoArray[0]);\n  const [game, setGame] = useState<TypesGame>({\n    player: \"X\",\n    statusGame: \"Home\",\n    adversary: null,\n    winner: null,\n    pointsX: 0,\n    round: 1,\n    pointsO: 0,\n  });\n  const historyNavigate = useNavigate();\n\n  const clearHistoryNavigate = () => {\n    historyNavigate({\n      pathname: window.location.pathname,\n      search: ``,\n    });\n  };\n\n  const LocationSearch = () => {\n    const { search } = useLocation();\n    return useMemo(() => new URLSearchParams(search), [search]);\n  };\n\n  const queryUrlParameter = LocationSearch();\n  const urlParameter: any = queryUrlParameter.get(\"board\");\n  const howManyCharactersX = !urlParameter?.match(gameCharacters.X)?.length ? 0 : urlParameter?.match(gameCharacters.X)?.length;\n  const howManyCharactersO = !urlParameter?.match(gameCharacters.O)?.length ? 0 : urlParameter?.match(gameCharacters.O)?.length;\n\n  useEffect(() => {\n    if (urlParameter) {\n\n      if (urlParameter.length !== 9) {\n        alert(\"Something wrong is not right! hehe, you typed a board with more than 9 characters\");\n        setGame({ ...game, player: \"X\", winner: null });\n        clearHistoryNavigate();\n        return setInitialBoard(boardDefault);\n      };\n\n      if (onlyGameCharacters.test(urlParameter)) {\n        alert(\"Something wrong is not right! hehe, board only accepts the following characters X space O\");\n        setGame({ ...game, player: \"X\", winner: null });\n        clearHistoryNavigate();\n        return setInitialBoard(boardDefault);\n      };\n\n      if (howManyCharactersX - howManyCharactersO >= 2 || howManyCharactersO - howManyCharactersX >= 2) {\n        alert(\"Something wrong is not right! hehe, invalid board a player cannot have more than 1 play advantage of his opponent\");\n        setGame({ ...game, player: \"X\", winner: null });\n        clearHistoryNavigate();\n        return setInitialBoard(boardDefault);\n      };\n\n      if (howManyCharactersX - howManyCharactersO === 1) setGame({ ...game, player: \"O\", winner: null });\n      if (howManyCharactersO - howManyCharactersX === 1) setGame({ ...game, player: \"X\", winner: null });\n\n      setInitialBoard(urlParameter?.toUpperCase());\n    };\n\n    if (!queryUrlParameter.get(\"board\")) {\n      setInitialBoard(boardDefault);\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [urlParameter]);\n\n  const fillTheAreaWithThePlayer = (index: number) => {\n    if (boardCurrent[index] !== \" \") return null;\n    if (game.winner) return null;\n\n    setBoardCurrent(\n      boardCurrent.map((playerArea: string, area: number) => (area === index ? game.player : playerArea))\n    );\n\n    return setGame({ ...game, player: game?.player === \"X\" ? \"O\" : \"X\" });\n  };\n\n  const validWinner = () => {\n    endOfTheGame(boardCurrent).forEach((playerAreas) => {\n      if (playerAreas.every((playerArea) => playerArea === \"O\"))\n        return setGame({ ...game, winner: \"O\", statusGame: \"GameOver\", pointsO: game.pointsO + 1, round: game.round + 1 });\n\n      if (playerAreas.every((playerArea) => playerArea === \"X\"))\n        return setGame({ ...game, winner: \"X\", statusGame: \"GameOver\", pointsX: game.pointsX + 1, round: game.round + 1 });\n    });\n  };\n\n  const validDraw = () => {\n    if (boardCurrent?.every((playerArea: string) => playerArea !== \" \"))\n      return setGame({ ...game, winner: \"draw\", statusGame: \"GameOver\", round: game.round + 1 });\n  };\n\n  const computerMovementAndEndOfTheGame = useCallback(() => {\n    validDraw();\n    validWinner();\n\n    if (game?.adversary === \"computer\") {\n      if (game.player === \"O\") {\n        let emptySeatsOnBoard = [];\n        let emptyArea = boardCurrent.indexOf(\" \");\n\n        while (emptyArea !== -1) {\n          emptySeatsOnBoard.push(emptyArea);\n          emptyArea = boardCurrent.indexOf(\" \", emptyArea + 1);\n        };\n\n        const computerRandomPosition = Math.floor(\n          Math.random() * emptySeatsOnBoard?.length\n        );\n        let newBoard = boardCurrent.slice();\n        newBoard[emptySeatsOnBoard[computerRandomPosition]] = \"O\";\n\n        setBoardCurrent(newBoard);\n\n        return setGame({ ...game, player: \"X\" });\n      };\n    };\n\n    historyNavigate({\n      pathname: window.location.pathname,\n      search: `?board=${encodeURIComponent(boardCurrent.join(\"\"))}`,\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [boardCurrent, game.player]);\n\n  useEffect(() => {\n\n    if (!game.statusGame) return computerMovementAndEndOfTheGame();\n    if (game.winner) {\n      computerMovementAndEndOfTheGame();\n      return clearHistoryNavigate();\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [game.statusGame, computerMovementAndEndOfTheGame, urlParameter]);\n\n  const startGame = () => {\n    setBoardCurrent(turningBoardIntoArray[0]);\n    setGame({ ...game, player: \"X\", winner: null, statusGame: null, pointsX: 0, round: 1, pointsO: 0 });\n  };\n\n  const replay = () => {\n    setBoardCurrent(turningBoardIntoArray[0]);\n    setGame({ ...game, player: game.round % 2 === 0 ? \"O\" : \"X\", winner: null, statusGame: null });\n  };\n\n  const goHome = () => {\n    setGame({ ...game, statusGame: \"Home\", adversary: null, winner: null, });\n  };\n\n  return (\n    <>\n    <SelectTheme statusGame={game.statusGame} />\n\n      {!game?.statusGame &&\n        <S.ContainerPointsRound>\n          <S.Points>Points X<S.ValuePointsX>{game.pointsX}</S.ValuePointsX></S.Points>\n          <S.Round>Round <S.RoundAnimation><S.ValueRound>{game.round}</S.ValueRound></S.RoundAnimation> </S.Round>\n          <S.Points>Points O<S.ValuePointsO>{game.pointsO}</S.ValuePointsO></S.Points>\n        </S.ContainerPointsRound>}\n      <S.GameContianer>\n        <Title nameGame=\"Hash Game\" />\n\n        <Board boardCurrent={boardCurrent} onClick={fillTheAreaWithThePlayer} />\n\n        <GameDialog\n          game={game}\n          startGame={startGame}\n          replay={replay}\n          goHome={goHome}\n          selectComputer={() => setGame({ ...game, adversary: \"computer\" })}\n          selectMultiPlayers={() => setGame({ ...game, adversary: \"multiPlayers\" })}\n        />\n\n        <GoToGitHub colorDescription={game?.statusGame} />\n      </S.GameContianer>\n      {!game?.statusGame && <S.PLayerTurn>player turn\n        <S.PlayerTurnAnimation>\n          <S.SpanTurn colorPlayrTurn={game.player}>{game.player}</S.SpanTurn>\n        </S.PlayerTurnAnimation>\n      </S.PLayerTurn>}\n\n      \n    </>\n  );\n}\n\nexport default React.memo(Hash);","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n\n* {\n  outline: none;\n  box-sizing: border-box;\n  font-family: \"Press Start 2P\";\n  font: inherit;\n  margin: 0;\n  padding: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n};\n\nbody {\n  display: grid;\n  align-items: center;\n  background: ${(props) => props.theme.colors.background.primary};\n  height: 100vh;\n};\n\n@media (min-width: 400px) {\n  body {\n    justify-content: center;\n  }\n};\n`;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"nes.css/css/nes.min.css\";\nimport { boardDefault } from \"./ui/helpers/constantes\";\nimport Hash from './ui/components/templates/Hash';\nimport { SelectThemeProvider } from './ui/helpers/hooks/theme';\nimport GlobalStyle from './ui/helpers/styles/global';\n\nconst App = () => {\n  const [initialBoard, setInitialBoard] = useState(boardDefault);\n\n  return (\n    <SelectThemeProvider>\n      <GlobalStyle />\n\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Hash board={initialBoard} setInitialBoard={setInitialBoard} />} />\n          <Route path={`/react-hash/`} element={<Hash board={initialBoard} setInitialBoard={setInitialBoard} />} />\n          {/*rota /react-hash/ foi definida por causa do git, onde o projeto ta hospedado! */}\n          <Route path='*' element={<h1>URL NAO EXISTE!</h1>} />\n        </Routes>\n      </Router>\n    </SelectThemeProvider>\n\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}