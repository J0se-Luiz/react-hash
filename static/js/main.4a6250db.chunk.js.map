{"version":3,"sources":["ui/helpers/constantes/index.tsx","ui/components/templates/styles.ts","ui/components/atoms/Title/styles.ts","ui/components/atoms/Title/index.tsx","ui/components/organisms/GameDialog/styles.ts","ui/components/organisms/GameDialog/index.tsx","ui/components/molecules/Board/styles.ts","ui/components/molecules/Board/index.tsx","ui/components/templates/Hash.tsx","index.tsx"],"names":["ImageGlobal","VsComputer","process","MultiPlayers","Start","Replay","GoHome","GameContianer","styled","section","TitleStyle","h1","Title","nameGame","Background","div","props","open","ContainerGameDialog","dialog","TitleModal","h2","DescriptionModal","MessageWinner","DescriptionEndGame","p","winner","ContainerBtnsGameOver","BtnStart","button","BtnVsComputer","adversary","BtnMultiPlayers","BtnReplay","BtnGoHome","GameDialog","game","startGame","goHome","selectComputer","selectMultiPlayers","statusGame","type","onClick","disabled","BoardStyle","ul","PlayerArea","li","border","css","hover","Board","board","map","player","index","Hash","useState","Array","fill","setBoard","setGame","validateIfTheGameIsOver","useCallback","every","item","validDraw","endOfTheGame","forEach","playerAreas","playerArea","emptySeatsOnBoard","idx","indexOf","push","computerRandomPosition","Math","floor","random","length","newBoard","slice","useEffect","itemIndex","React","memo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a6250db.chunk.js","sourcesContent":["\nexport const endOfTheGame = (board: any[]) => {\n    const endGame = [\n        [board[0], board[1], board[2]],\n        [board[0], board[3], board[6]],\n        [board[0], board[4], board[8]],\n        [board[1], board[4], board[7]],\n        [board[2], board[5], board[8]],\n        [board[2], board[4], board[6]],\n        [board[3], board[4], board[5]],\n        [board[6], board[7], board[8]],\n    ];\n    return endGame\n}\n\nexport const ImageGlobal = {\n    VsComputer: `${process.env.PUBLIC_URL}/img/png/vsComputer.png`,\n    MultiPlayers: `${process.env.PUBLIC_URL}/img/png/multiPlayers.png`,\n    Start: `${process.env.PUBLIC_URL}/img/png/start.png`,\n    Replay: `${process.env.PUBLIC_URL}/img/png/replay.png`,\n    GoHome: `${process.env.PUBLIC_URL}/img/png/goHome.png`,\n}\n","import styled from \"styled-components\";\n\nexport const GameContianer = styled.section`\n  height: auto;\n  border-radius: 5px;\n  font-size: 2rem;\n  font-weight: bold;\n  color: #00000077;\n\n  border: 1px solid;\n  background-color: #FFFFFF;\n  padding: 15px;\n\n  @media (max-width: 400px) {\n    width: 95%;\n    margin: auto;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const TitleStyle = styled.h1`\n  text-align: center;\n  font-size: 3rem;\n  color: #555;\n  padding: 2rem;\n\n  @media (max-width: 400px) {\n    font-size: 3rem;\n  color: #555;\n  padding: 1rem 0.5rem;\n  }\n`;\n","import React from 'react';\nimport * as S from './styles';\nimport { TypesTitle } from '../../../helpers/types'\n\n\nconst Title: React.FC<TypesTitle> = ({ nameGame }) => (\n    <S.TitleStyle>\n        {nameGame}\n    </S.TitleStyle>\n);\n\nexport default Title;\n","import styled from \"styled-components\";\nimport { ImageGlobal } from \"../../../helpers/constantes\";\nimport { OpenDialogTypeStyle, PlayerWinnerStyle } from \"../../../helpers/types\";\n\nexport const Background = styled.div<OpenDialogTypeStyle>`\n  display: ${(props) => (props.open ? \"flex\" : \"none\")};\n\n  ::before {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    content: \"\";\n    position: fixed;\n    background: rgba(0, 0, 0, 0.5);\n\n    z-index: 100;\n  }\n`;\n\nexport const ContainerGameDialog = styled.dialog`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  position: fixed;\n  top: 17vh;\n  box-sizing: border-box;\n  z-index: 100;\n  margin: 0 auto;\n  background-color: #ffffff;\n  padding: 30px 10px;\n\n  @media (max-width: 500px) {\n    width: 90%;\n  }\n`;\n\nexport const TitleModal = styled.h2`\n  margin: 1rem;\n  font-size: 3rem;\n  font-weight: bold;\n  color: #00000077;\n`;\n\nexport const DescriptionModal = styled(TitleModal)`\n  font-size: 1.6rem;\n  color: #00000070;\n`;\n\nexport const MessageWinner = styled(TitleModal)`\n  opacity: 0.7;\n\n  margin-bottom: 3rem;\n`;\n\nexport const DescriptionEndGame = styled.p<PlayerWinnerStyle>`\n  color: ${(props) => (props.winner === \"X\" ? \"red\" : \"blue\")};\n`;\n\nexport const ContainerBtnsGameOver = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nexport const BtnStart = styled.button`\n  cursor: pointer;\n  height: 77px;\n  width: 77px;\n  background-image: url(${ImageGlobal.Start});\n  background-repeat: no-repeat;\n  background-position: center;\n  border: none;\n  background-color: transparent;\n  box-shadow: none;\n\n  @media (max-width: 1024px) {\n    font-size: 0.8rem;\n    border-width: 3px;\n    padding: 4px 8px;\n  }\n  &:active {\n    opacity: 0.2;\n    cursor: wait;\n  }\n\n  &:disabled {\n    opacity: 0.4;\n    cursor: not-allowed;\n  }\n`;\n\nexport const BtnVsComputer = styled(BtnStart)<PlayerWinnerStyle>`\n  border: ${(props) =>\n    props.adversary === \"computer\" ? \"1px solid #00000055\" : \"\"};\n  transform: scale(${(props) => (props.adversary === \"computer\" ? 1.2 : 1)});\n  opacity: ${(props) => (props.adversary === \"computer\" ? 0.3 : \"\")};\n\n  transition: all 0.2s ease-in-out;\n  height: 80px;\n  width: 85px;\n  background-image: url(${ImageGlobal.VsComputer});\n`;\n\nexport const BtnMultiPlayers = styled(BtnStart)<PlayerWinnerStyle>`\n  border: ${(props) =>\n    props.adversary === \"multiPlayers\" ? \" 1px solid #00000055\" : \"\"};\n  transform: scale(\n    ${(props) => (props.adversary === \"multiPlayers\" ? 1.2 : 1)}\n  );\n  opacity: ${(props) => (props.adversary === \"multiPlayers\" ? 0.3 : \"\")};\n\n  transition: all 0.2s ease-in-out;\n  height: 80px;\n  width: 85px;\n  background-image: url(${ImageGlobal.MultiPlayers});\n`;\n\nexport const BtnReplay = styled(BtnStart)`\n  height: 71px;\n  width: 72px;\n  background-image: url(${ImageGlobal.Replay});\n`;\n\nexport const BtnGoHome = styled(BtnStart)`\n  height: 71px;\n  width: 72px;\n  background-image: url(${ImageGlobal.GoHome});\n`;\n","import React from \"react\";\nimport * as S from \"./styles\";\nimport { typesGameDialog } from '../../../helpers/types'\n\nconst GameDialog: React.FC<typesGameDialog> = ({ game, startGame, goHome, selectComputer, selectMultiPlayers }) => {\n\n\n  return (\n    <S.Background open={game?.winner || game?.statusGame} >\n      <S.ContainerGameDialog>\n        {game?.statusGame === \"Home\" && (\n          <>\n            <S.TitleModal>Hello let's play?</S.TitleModal>\n            <S.DescriptionModal> choose game mode and press start </S.DescriptionModal>\n\n            <S.ContainerBtnsGameOver >\n              <S.BtnVsComputer aria-label=\"Button selectComputer\" type=\"button\" onClick={selectComputer} adversary={game.adversary} />\n              <S.BtnMultiPlayers aria-label=\"Button selectMultiPlayers\" type=\"button\" onClick={selectMultiPlayers} adversary={game.adversary} />\n            </S.ContainerBtnsGameOver>\n\n            <S.BtnStart aria-label=\"Button StartGame\" disabled={!game.adversary} type=\"button\" onClick={startGame} />\n          </>)}\n\n\n        {game?.statusGame === \"GameOver\" && (\n          <>\n            <S.TitleModal>Game Over</S.TitleModal>\n\n            {game?.winner === \"draw\" ? (\n              <S.MessageWinner >\n                Draw!\n              </S.MessageWinner>\n            ) : (\n              <S.MessageWinner >\n                <S.DescriptionEndGame winner={game?.winner}>{game?.winner}</S.DescriptionEndGame>\n                is the winner!\n              </S.MessageWinner>\n            )}\n            <S.ContainerBtnsGameOver >\n              <S.BtnReplay aria-label=\"Button Replay\" type=\"button\" onClick={startGame} />\n              <S.BtnGoHome aria-label=\"Button GoHome\" type=\"button\" onClick={goHome} />\n            </S.ContainerBtnsGameOver>\n          </>)}\n\n      </S.ContainerGameDialog>\n    </S.Background>\n  );\n};\n\nexport default GameDialog;","import styled, { css } from \"styled-components\";\nimport { typesPlayerAresStyle } from '../../../helpers/types'\n\nexport const BoardStyle = styled.ul`\n  display: grid;\n  justify-content: center;\n  grid-template-columns: repeat(3, 100px);\n  grid-template-rows: repeat(3, 100px);\n\n  @media (max-width: 400px) {\n    grid-template-columns: repeat(3, 80px);\n    grid-template-rows: repeat(3, 80px);\n  }\n`;\n\nexport const PlayerArea = styled.li<typesPlayerAresStyle>`\n  background-color: #ffffff;\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  font-size: 3rem;\n  font-weight: bold;\n  color: #00000060;\n  border: 3px solid;\n\n  cursor: pointer;\n\n  ${(props) => {\n    if (props.border === 0)\n      return css`\n        border-top: none;\n        border-left: none;\n      `;\n    if (props.border === 1)\n      return css`\n        border-top: none;\n      `;\n    if (props.border === 2)\n      return css`\n        border-top: none;\n        border-right: none;\n      `;\n    if (props.border === 3)\n      return css`\n        border-left: none;\n      `;\n    if (props.border === 5)\n      return css`\n        border-right: none;\n      `;\n    if (props.border === 6)\n      return css`\n        border-left: none;\n        border-bottom: none;\n      `;\n    if (props.border === 7)\n      return css`\n        border-bottom: none;\n      `;\n    if (props.border === 8)\n      return css`\n        border-right: none;\n        border-bottom: none;\n      `;\n  }};\n\n  ${(props) => {\n    if (props.hover === \"\")\n      return css`\n        :hover {\n          border: 4px solid;\n          box-shadow: 2px 5px 23px 7px rgba(0, 0, 0, 0.3);\n          transition: all 0.2s ease-in-out;\n          transform: scale(1.1);\n          background-color: rgba(248, 248, 255);\n        }\n      `;\n  }};\n`;\n","import React from 'react';\nimport * as S from './styles';\nimport { TypesBoard } from '../../../helpers/types'\n\nconst Board: React.FC<TypesBoard> = ({ board, onClick }) => (\n  <S.BoardStyle>\n    {board?.map((player: string, index: number) => (\n      <S.PlayerArea\n        key={index}\n        border={index}\n        hover={player}\n        onClick={() => onClick(index)}\n      >\n        {player}\n      </S.PlayerArea>\n    ))}\n  </S.BoardStyle>\n);\n\nexport default Board;\n","\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { endOfTheGame } from '../../helpers/constantes';\nimport * as S from './styles'\nimport Title from \"../atoms/Title\";\nimport GameDialog from '../organisms/GameDialog';\nimport Board from '../molecules/Board';\nimport { TypesGame } from '../../helpers/types';\n\nconst Hash = () => {\n  const [board, setBoard] = useState(Array(9).fill(\"\"));\n  const [game, setGame] = useState<TypesGame>({\n    player: \"X\",\n    statusGame: \"Home\",\n    adversary: null,\n    winner: null,\n  });\n\n  const fillTheAreaWithThePlayer = (index: number) => {\n\n    if (board[index] !== \"\") return null;\n\n    setBoard(\n      board.map((playerArea, itemIndex) => (itemIndex === index ? game.player : playerArea))\n    );\n\n    return setGame({ ...game, player: game?.player === \"X\" ? \"O\" : \"X\" });\n  };\n\n  const validWinner = () => {\n\n    endOfTheGame(board).forEach((playerAreas) => {\n\n      if (playerAreas.every((playerArea) => playerArea === \"O\"))\n        return setGame({ ...game, winner: \"O\", statusGame: \"GameOver\" });\n\n      if (playerAreas.every((playerArea) => playerArea === \"X\"))\n        return setGame({ ...game, winner: \"X\", statusGame: \"GameOver\" });\n    });\n  };\n\n  const validDraw = () => {\n    if (board?.every((item) => item !== \"\"))\n      return setGame({ ...game, winner: \"draw\", statusGame: \"GameOver\" });\n  };\n\n  const validateIfTheGameIsOver = useCallback(() => {\n    validDraw();\n    validWinner();\n\n    if (game?.adversary === \"computer\") {\n      if (game?.player === \"O\") {\n        let emptySeatsOnBoard = [];\n        let idx = board.indexOf(\"\");\n\n        while (idx !== -1) {\n          emptySeatsOnBoard.push(idx);\n          idx = board.indexOf(\"\", idx + 1);\n        }\n\n        const computerRandomPosition = Math.floor(\n          Math.random() * emptySeatsOnBoard?.length\n        );\n        let newBoard = board.slice();\n        newBoard[emptySeatsOnBoard[computerRandomPosition]] = \"O\";\n\n        setBoard(newBoard);\n\n        return setGame({ ...game, player: \"X\", });\n      } else return null\n    }\n  }, [game?.winner, board]);\n\n  useEffect(() => {\n    validateIfTheGameIsOver();\n  }, [board, game.winner, game.player, validateIfTheGameIsOver]);\n\n  const startGame = () => {\n    setBoard(Array(9).fill(\"\"));\n    setGame({ ...game, player: \"X\", winner: null, statusGame: null });\n  };\n\n  const goHome = () => {\n    setGame({ ...game, statusGame: \"Home\", adversary: null });\n  }\n\n  return (\n    <S.GameContianer>\n      <Title nameGame=\"Hash Game\" />\n\n      <Board board={board} onClick={fillTheAreaWithThePlayer} />\n\n      <GameDialog\n        game={game}\n        startGame={startGame}\n        goHome={goHome}\n        selectComputer={() => setGame({ ...game, adversary: \"computer\" })}\n        selectMultiPlayers={() => setGame({ ...game, adversary: \"multiPlayers\" })} />\n\n    </S.GameContianer>\n  );\n}\n\nexport default React.memo(Hash);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './ui/helpers/globalStyle/globalStyle.css'\nimport Hash from './ui/components/templates/Hash'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Hash />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}